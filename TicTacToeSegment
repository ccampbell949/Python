#The first step is to store a dictionary in a variable named theBoard.
#This reperesnts the 9 squares of a tictactoe board.
#The squares are currently blank

theBoard = {'top-L': ' ', 'top-M': ' ', 'top-R': ' ',
            'mid-L': ' ', 'mid-M': ' ', 'mid-R': ' ',
            'low-L': ' ', 'low-M': ' ', 'low-R': ' '}

#The next step definesthe function 'printBoard'
#This prints out an actual black board in the shell using the
#symbols, vertical and horizontal lines on the keyboard
def printBoard(board):
    print(board['top-L'] + '|' + board['top-M'] + '|' + board['top-R'])
    print('-+-+-')
    print(board['mid-L'] + '|' + board['mid-M'] + '|' + board['mid-R'])
    print('-+-+-')
    print(board['low-L'] + '|' + board['low-M'] + '|' + board['low-R'])
    
turn = 'X'
for i in range(9):
      printBoard(theBoard) #Prints the board at the start of each turn
      print('Turn for ' + turn + '. Move on which space?') #Asks user which space
        
      move = input() #asks the active user to input their move
    
      theBoard[move] = turn #updates the board (dictionary) accordingly
                            #with user input by attributing the X or O to
                            #a new value for the relevent key (the location on
                            #the board i.e top-R etc.)
      
      if turn == 'X':       #If it is X's turn, it is now O's
            turn = 'O'
      else:                 #Or else it is now X's
            turn = 'X'

printBoard(theBoard)

#This programme does not ever display a winner, nor does it stop someone from
#choosing the same locationmultiple times (i.e. the different players could
#choose the same spot on the board and no errormessgae is displayed.



